/**
 * aviao e carro
 * @author samuel gadelha
 */
//Classe modelo (abstração)
console.clear()
class Modelo {
    //atributos
    constructor(ano, cor ) {
        this.ano= ano //this  esta falando que é uma variável
        this.cor= cor
    }
    //métodos
    criarmodelo() {
        console.log("------------------------------------")
        console.log(`carro do ano de  ${this.ano}`)
        console.log(`cor: ${this.cor}`)
    
    }
    ligar() {
        console.log(`ligando o celta ${this.cor} do ano ${this.ano} Garagem de casa`)
    }
    desligar() {
        console.log(`desligando a ferrari ${this.cor} do ano ${this.ano} na garagem de casa `)
    }
    acelerar() {
        console.log(`acelerando o celta ${this.cor} do ano ${this.ano} na avenida Paulista`)
    }
}
//Classe modelo com herança(extends)
class Aviao extends Modelo {
    //atributos
    constructor(ano, cor, envergadura) {
        super(ano, cor) // super é da classe superior
        this.envergadura = envergadura
    }
    //métodos
    criarAviao() {
        console.log("------------------------------------")
        console.log(`aviao do ano ${this.ano}`)
        console.log(`Da cor ${this.cor}`)
    }
    aterrizar() {
        console.log(`pousando o aviao  ${this.cor} do ano ${this.ano} no aeroporto de congonhas `)
        if (this.envergadura === true) {
            console.log("***aterrizagem completa***")
        }
    }
    //polimorfismo (sobrescrita de um método existente)
    acelerar() {
        console.log(`o aviao  ${this.cor} do ano ${this.ano} esta decolando no aeroporto de guarulhos `)
    }
}
// Criação do Mundo
console.clear()
console.clear()
console.log("           _                                     ") 
console.log("  __ ___ _(_)__ _ ___    ___   __ __ _ _ _ _ _ ___ ") 
console.log(" / _` \\ V / / _` / _ \\  / -_) / _/ _` | '_| '_/ _ \\ ")
console.log(" \\__,_|\\_/|_\\__,_\\___/  \\___| \\__\\__,_|_| |_| \\___/")
                                                  
//Criando um objeto (carro preto)
const modelo1 = new Modelo(1992, "preto")
modelo1.criarmodelo()
modelo1.ligar()
//Criando um objeto (carro cinza)  
const modelo2 = new Modelo(1997, "cinza")
modelo2.criarmodelo()
modelo2.acelerar()
//Criando um objeto (carro branco)
const modelo3 = new Modelo(1999, "branco")
modelo3.criarmodelo()
modelo3.desligar()
//Criando um aviao branco
const aviao1 = new Aviao(2015, "branco", false)
aviao1.criarAviao()
aviao1.aterrizar()
//Criando um aviao azul
const aviao2 = new Aviao(2009, "azul", true)
aviao2.criarAviao()
aviao2.aterrizar()
//Criando um aviao vermelho (polimorfismo)
const aviao3 = new Aviao(2011, "vermelho", true)
aviao3.criarAviao()
aviao3.acelerar()
